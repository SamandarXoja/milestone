import React, { useState } from "react";
import styles from "./Instruction.style";
import { SafeAreaView } from "react-native-safe-area-context";
import { Stack, useRouter } from "expo-router";
import {
  Image,
  Linking,
  Pressable,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import backIcon from "../../assets/icons/left.png";
import { Text, View } from "react-native";
import Logo from "../../assets/icons/Logo.svg";

function Instruction() {
  const router = useRouter();

  const [learn, setLearn] = useState(false);
  const [examination, setExamination] = useState(false);
  const [showInstructions, setShowInstructions] = useState(true);
  const [practice, setPractice] = useState(false);

  const [instructions, instructionsSet] = useState([
    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è",
    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏",
    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏",
  ]);

  function choiceInstruction(number) {
    if (number == 0) {
      setLearn(true);
      setShowInstructions(false);
    } else if (number == 1) {
      setLearn(false);
      setShowInstructions(false);
      setExamination(true);
    } else if (number == 2) {
      setLearn(false);
      setShowInstructions(false);
      setExamination(false);
      setPractice(true);
    }
  }

  const handleBack = function () {
    setShowInstructions(true);
    setLearn(false);
    setExamination(false);
    setPractice(false);
  };

  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: "#fff" }}>
      <Stack.Screen
        options={{
          headerTitle: "",
          headerShadowVisible: false,
          headerBackVisible: false,
          headerLeft: () => (
            <TouchableOpacity onPress={() => router.back()}>
              <Image
                source={backIcon}
                resizeMode="cover"
                style={styles.button}
              />
            </TouchableOpacity>
          ),
          headerRight: () => (
            <TouchableOpacity style={{ width: 150, height: 46 }}>
              <Logo width="100%" height="100%" />
            </TouchableOpacity>
          ),
        }}
      />
      <ScrollView showsVerticalScrollIndicator={false}>
        {practice && (
          <View style={styles.box}>
            <Text style={styles.boxTitle}>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</Text>
            <Text>
              –î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–Ω–∏–≥–∏, –∞–≤—Ç–æ—Ä —Å–æ–∑–¥–∞–ª —Å–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏–∑—É—á–µ–Ω–∏—è
              –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –∏ –Ω–∞–ø–∏—Å–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞
              —Ä—É—Å—Å–∫–æ–º, —á—Ç–æ–±—ã –∏—Ö –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å Writingüìù,
              –∞ —Ç–∞–∫ –∂–µ –¥–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π
            </Text>
            <Text style={styles.bolder}>—Ç–æ–ª—á–æ–∫ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è Speaking'–∞üó£</Text>
            <Text>–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ</Text>
            <Text style={styles.bolder}>
              –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —É—Å—Ç–Ω–æ –≤—Å–ª—É—Ö‚òùÔ∏è, –ø–æ—Ç–æ–º –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –±–æ—Ç,
            </Text>
            <Text>
              —á—Ç–æ–±—ã –æ–Ω —Å–∫–∏–Ω—É–ª –≤–∞–º –ø–µ—Ä–µ–≤–æ–¥, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–∞
              –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.
            </Text>

            <Text style={[styles.line, styles.mts]}>
              –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä objective'–∞
              –µ—â—ë —Ä–∞–∑
            </Text>
            <Text>
              –∏ —Ç–∞–∫–∂–µ –≤—Å—ë –∏–¥—ë—Ç –ø–æ –∫—Ä—É–≥—É‚ôªÔ∏è –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ
              –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥".
            </Text>

            <Text style={styles.mts}>
              –°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ —Å —É—Ä–æ–≤–Ω—è "Toddler (Beginner-
              A1)" –¥–æ —É—Ä–æ–≤–Ω—è "Adult (Advanced- C1)". –ù–∞–∑–≤–∞–Ω–∏—è —ç—Ç–∏—Ö —É—Ä–æ–≤–Ω–µ–π
              —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞–≤—Ç–æ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–ø–∏—Å–∞–ª –∞–≤—Ç–æ—Ä –≤–∞—à–µ–≥–æ
              –ª—é–±–∏–º–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è.
            </Text>
            <Text style={styles.bolder}>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</Text>
            <Text>–≤–æ—Ç, —á—Ç–æ –æ–±–µ—â–∞–µ—Ç —ç—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞.</Text>
            <Text style={styles.line}>
              –ï—Å–ª–∏ –≤–∞–º —Å–ª–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—É—á–∏—Ç—å—Å—è
              —É Axo.
            </Text>
            <Text>–î–ª—è —ç—Ç–æ–≥–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ–º—É –ª–∏—á–Ω–æ –ø–æ</Text>
            <TouchableOpacity
              onPress={() => Linking.openURL("https://t.me/Axo_axick")}
            >
              <Text style={styles.links}> @axo_axick</Text>
            </TouchableOpacity>
            <Text style={styles.mts}>
              –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã–¥–∞–≤–∞—Ç—å –≤—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –ø—Ä–æ–≥—Ä–∞–º–º—ã,
              –∞–≤—Ç–æ—Ä —Ä–µ—à–∏–ª –¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ‚úñÔ∏è, –ø–æ –ø—Ä–∏—á–∏–Ω–µ –∫–æ—Ç–æ—Ä–æ–≥–æ
              –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ—Ä–∞. –ù–æ —É –≤–∞—Å –µ—Å—Ç—å
              5 –ø—Ä–æ–±–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Å–≤–æ–∏—Ö –∑–Ω–∞–Ω–∏–πüòå
            </Text>
            <TouchableOpacity
              style={[styles.block, styles.backs, styles.mbs]}
              onPress={handleBack}
            >
              <Text>–ù–∞–∑–∞–¥</Text>
            </TouchableOpacity>
          </View>
        )}

        {examination && (
          <View style={styles.box}>
            <Text style={styles.boxTitle}>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</Text>
            <Text>
              –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –∞—É–¥–∏–æ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ —Å–ª—É—à–∞—Ç—å –∏
              –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã –≤—Å—ë –æ—Å–≤–æ–∏–ª–∏. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é
              –ø–æ–ª—å–∑—É —Å –∞—É–¥–∏–æ,
              <Text style={styles.line}>
                –ø—ã—Ç–∞–π—Ç–µ—Å—å —É—Å–ø–µ–≤–∞—Ç—å –ø–æ–∫–∞ —Ç–∏–∫–∞—é—Ç —á–∞—Å—ã.
              </Text>
              <Text>
                –ï—Å–ª–∏ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç–µ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤–∞—Ö, –∑–Ω–∞—á–∏—Ç –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–æ—É—á–∏—Ç—å –∏ —ç—Ç–∏ —Å–ª–æ–≤–∞.
              </Text>
              <Text style={styles.bolder}>–ü—ã—Ç–∞–π—Ç–µ—Å—å –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å</Text>
              <Text>–∑–∞ –ê—Ö–æ,</Text>
              <Text style={styles.bolder}>–µ—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å‚òùÔ∏è</Text>
            </Text>
            <Text style={styles.boxTwo}>
              <Text style={styles.line}>–ü—Ä–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</Text>
              <Text style={styles.line}>
                —Å–ª—É—à–∞–π—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è,
              </Text>
              <Text> —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 5-7 –º–∏–Ω—É—Ç</Text>
              <Text style={styles.bolder}>
                –ì–ª–∞–≤–Ω–æ–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ù–ï –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—åü§ó
              </Text>
            </Text>
            <Text style={styles.link}>–ë—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å: </Text>
            <TouchableOpacity
              onPress={() => Linking.openURL("https://t.me/Axo_axick")}
            >
              <Text style={styles.links}>@axo_axick</Text>
            </TouchableOpacity>
            <TouchableOpacity
              style={[styles.block, styles.backs]}
              onPress={handleBack}
            >
              <Text>–ù–∞–∑–∞–¥</Text>
            </TouchableOpacity>
          </View>
        )}

        {learn && (
          <View style={styles.box}>
            <Text style={styles.boxTitle}>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</Text>
            <Text>
              –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –∞—É–¥–∏–æ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ —Å–ª—É—à–∞—Ç—å –∏
              –∏–∑—É—á–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –ê—Ö–æ. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø–æ–ª—å–∑—É —Å –∞—É–¥–∏–æ,
              –≤–∞–º
              <Text style={styles.bolder}> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å </Text>{" "}
              (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) <Text style={styles.bolder}>–≤—Å–ª—É—Ö –∑–∞ –≥–æ–ª–æ—Å–æ–º</Text>{" "}
              üó£ –ï—Å–ª–∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç, —Ö–æ—Ç—è –±—ã —à—ë–ø–æ—Ç–æ–º.
            </Text>
            <Text style={styles.boxTwo}>
              <Text style={styles.line}>
                –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å–ª–æ–≤
              </Text>{" "}
              –∏ —Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ –≤ –ª—é–±—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö (–≤ –∞–≤—Ç–æ–±—É—Å–µ, –≤ –º–µ—Ç—Ä–æ –∏
              —Ç.–¥.), –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Çüòå –£–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å –≤ —Å–≤–æ—ë
              —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.
            </Text>
            <Text style={styles.link}>–ë—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å: </Text>
            <TouchableOpacity
              onPress={() => Linking.openURL("https://t.me/Axo_axick")}
            >
              <Text style={styles.links}>@axo_axick</Text>
            </TouchableOpacity>
            <TouchableOpacity
              style={[styles.block, styles.backs]}
              onPress={handleBack}
            >
              <Text>–ù–∞–∑–∞–¥</Text>
            </TouchableOpacity>
          </View>
        )}

        {showInstructions && (
          <>
            <Text style={styles.question}>–° —á–µ–º –≤–∞–º –ø–æ–º–æ—á—å?</Text>
            <View style={styles.content}>
              {instructions.map((item, index) => {
                return (
                  <TouchableOpacity
                    style={styles.block}
                    key={index}
                    onPress={() => choiceInstruction(index)}
                  >
                    <Text style={styles.text}>{item}</Text>
                  </TouchableOpacity>
                );
              })}
              <TouchableOpacity
                onPress={() => router.back()}
                style={styles.block}
              >
                <Text>–ù–∞–∑–∞–¥</Text>
              </TouchableOpacity>
            </View>
          </>
        )}
      </ScrollView>
    </SafeAreaView>
  );
}

export default Instruction;
